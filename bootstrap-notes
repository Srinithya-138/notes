responsive web design is about creating web sites which automatically adjust themselves to look good on all devices,from small phones to larger desktops
bootstap is a css frame work 
**mobile first design if we write for the mobile then it adjust for all other devices no need to write the media queries
**reusable classes 
**inbuild ui elements such as buttons,cards,modals
// twitter origin developed by Mark Otto and Jacob Thornton at twttter
//bootstarp was released as open source project on 19 th aug 2011 

//break points
<576 px =x-small
>=576px small(sm)
>=768px medium(md)
>=992px large(lg)
>=1200px exrta large(xl)
>=1400px extra extra large(xxl)//the above things will resemble the min-width (from 576px to greater for sm)

//container class
*container - it has the width based on the break points we can give like .container-lg etc..
*container-fluid-it occupies 100% width in all view port

//grid system
in  bootstrap we can add 12 boxes(col) in bootstrap
it has the row and col class
container should be maintained in the row and column
if we use col class in all divice it maintain in equal width
if we want 2 col and one col should take 8 boxes then we can write in different size 
col-8 and col-2
upto some break point if we want to maintain we cangive like
col-sm-8(upto sm it will be maintain in 8 boxes decreasing the size below sm it will takes 100% width and become stack )
in row we can give (row row-cols-auto) it will take width based on our content 
if we give four column but we need only total 2 col then we can write as(row row-cols-4)
we can aslo write based on our media break points
(row row-cols-xl-5) it says in the xl device it has 5 cols
//vertical alignment -top and bottom
in vertiocal alignment the default position is in the start we  can either give it in center or bottom 
it also has break points row align-items-lg-end
we can also align single single item using (col align-self-start)
 if the font size is bigger then all boxes does not align evenly, there with according to the font all the boxes sholud align evenly in that case we can use  baseline it can be used in navigation bar design
 *stretch is extending its height
 //horizontal alignment-left and right
 row justify-content-center
 start,end,evenly,between
 we can also use break points
 row jsutify-content-lg-center
 order is used for changing the 1,2,3 and it is from 0 to 5

//margin -outer space
we have to use m prefix for bootstrap class
m-in all sides
m->start(s),top(t),end(e),Bottom(b)
//left,top,right,bottom
margin values is from 0 to 5
if we want top margin then we can use mt'
mx-horizontal margin(left and right)
my-vertical margin(top and bottom)
0-no margin
1-(it works in rem format 1rem=16px)16*0.25= 4 we get 4px as margin
2-16*2*0.25=>8px
3-16*3*.25=>16px
4-16*4*.25=>24px
5-16*5*.25=>48px
we can also maintain in media break points
m-*-5 * IS replaced with xxxl xl lg md sm and it does not have m because it is default

//padding-innerspace
use p-5 it also has from 0 to 5 and break points
ps-1 left side has one padding
pe- right,pt-top,pe-end,pb-bottom
same as like margin value is from 4,8,16,24,48

//border has 27 classes
if we give simply border then it has on all sides it has value from 0 to 5
we have to say like border border-1
if we give border-0 then border will disappear
we want border on all sides but we dont want on the top we can write as 
border border-5 border-top-0
we can use the color like primary,secondary,success,warning,info,light,dark,white like border border-5 border-primary
we can also use opacity like border-opacity-75 upto 10% we can reduce the opacity

//background-color
bg-primary ,by giving this we can see this as background-color:blue
we can also use the gradient by(bg-gradient) 
we can also use the opacity(bg-opacity-75) upto 10% we change the opacity

//typography 
Bootstrap 5 uses a default font-size of 1rem (16px by default), and its line-height is 1.5.
.h1 to .h6 classes can be used on <p> or other elements behave as headings wanted (<p class="h1">h1 Bootstrap heading</p>)
Display headings are used to stand out more than normal headings (larger font-size and lighter font-weight)//<h1 class="display-1">Display 1</h1>
The small element (and the .small class) is used to create a smaller, secondary text in any heading <h1>h1 heading <small>secondary text</small></h1>
mark element (or the .mark class) to highlight text (<p>Lorem <mark>ipsum </mark>dolor sit amet.</p>
        <p>Lorem <span class="mark">ipsum </span>dolor sit amet.</p>)
The abbr element is used to mark up an abbreviation or acronym(<p>The <abbr title="World Health Organization">WHO</abbr> was founded in 1948.</p>)
the .blockquote class to a <blockquote> is used to quoting blocks of content from another source. And when naming a source, like "from WWF's website", use the .blockquote-footer class (<blockquote class="blockquote">
    <p>For 50 years, WWF has been protecting the future of nature. The world's leading conservation organization, WWF works in 100 countries and is supported by 1.2 million members in the United States and close to 5 million globally.</p>
    <footer class="blockquote-footer">From WWF's website</footer>
  </blockquote>)
  we can create list nested and by using the cls name list-inline the list elementcan be placed in a single line
   


//tables
by using the cls name table we can create a table without styling
<table class="table">
if we want a striped row then we can write (table table-striped)
bordered table(table table-bordered)
table-hover class enables a hover state (grey background on mouse over) on table rows(table table-hover)
.table-dark class adds a black background to the table (table table-dark)
.table-dark and .table-striped to create a dark, striped table(<table class="table table-dark table-striped">)
.table-hover and table-dark class adds a hover effect (grey background color) on table rows(<table class="table table-dark table-hover">)
.table-borderless class removes borders from the table( <table class="table table-borderless">)
Contextual classes can be used to color the table, table rows or table cells. The classes that can be used are: .table-primary, .table-success, .table-info, .table-warning, .table-danger, .table-active, .table-secondary, .table-light and .table-dark(<table class="table"> <tr class="table-primary"> )//this is used only for the row or if we want color to the heaing then we can use in the <thead> tag inside (<thead class="table-dark">) colouring purpose
.table-sm class makes the table smaller by cutting cell padding in half(<table class="table table-bordered table-sm">)
when we create a table with lot of item in the row then we can use .table-responsive class this should be addes insidee the div this adds a scrollbar to the table when needed.<div class="table-responsive"> and we can use this depending on the screen length <div class="table-responsive-sm">  

//images
.rounded class adds rounded corners to an image
<img src="cinqueterre.jpg" class="rounded" alt="Cinque Terre"> 
.rounded-circle class shapes the image to a circle
.img-thumbnail class creates a thumbnail of the image(border like to the image)
float classes is used to float the image to the left or to the right
float-start->left
float-end->right
we can center an image  by adding the utility classes .mx-auto (margin:auto) and .d-block (display:block) to the image 
<img src="paris.jpg" class="mx-auto d-block" > 
//responsive image
.img-fluid class makes the image scale nicely to the parent element and it has be used to see the same resuly when the browser size is reduced
<img class="img-fluid" src="ny.jpg" alt="New York"> 

//alert
Alerts are created with the .alert class, followed by a contextual color classes(<div class="alert alert-success">
    <strong>Alert!</strong> This alert box could indicate a successful or positive action.
  </div>)
  Alerts are created with the .alert class, followed by one of the contextual classes .alert-success, .alert-info, .alert-warning, .alert-danger, .alert-primary, .alert-secondary, .alert-light or .alert-dark
  there is alos another class name alert which can be used for link(<div class="alert alert-success">
    <strong>Success!</strong> You should <a href="#" class="alert-link">read this message</a>.
  </div>) the text read this msg is like a link 
 //closing alert
  The button with class="btn-close" and data-bs-dismiss="alert" is used to close the alert box.The alert-dismissible class aligns the button to the right.(<div class="alert alert-info alert-dismissible">
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    <strong>Info!</strong> This alert box could indicate a neutral informative change or action.
  </div>)
  //animated alert
  The .fade and .show classes adds a fading effect when closing the alert message(<div class="alert alert-success alert-dismissible fade show">
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    <strong>Success!</strong> This alert box could indicate a successful or positive action.
  </div>)
//button 
by using simply "btn"->it creates a basic button we can use the cls name from btn-primary to btn-light and if we want in the link type we can use (btn-btn-link)
btn-group cls is used to create a button grp //<div class="btn-group">
  <button type="button" class="btn btn-primary">Apple</button>
  <button type="button" class="btn btn-primary">Samsung</button>
we can add the button size to btn-group cls (btn-group btn-group-lg)
we can create vertical button using vertical class(btn-group-vertical)
Button groups are "inline" by default, which makes them appear side by side when you have multiple groups we can create 2 div and btn-group so that we can have 2 button groups
//nesting button groups with dropdown (<div class="btn-group">
  <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">Sony</button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Tablet</a></li>
    <li><a class="dropdown-item" href="#">Smartphone</a></li>
  </ul>)


//Badges
  Badges can be used as part of links or buttons to provide a counter,this badges can be used in 2 ways inside the heading and span tag
  (<h2>Example heading <span class="badge bg-secondary">New</span></h2> and <span class="badge bg-primary">Primary</span>)we can also creATE rounded pill (<span class="badge rounded-pill bg-primary">Primary</span>)
  Badge inside a Button(<div class="container mt-3">
    <button type="button" class="btn btn-primary">
      Messages <span class="badge bg-danger">4</span>
    </button>
    <button type="button" class="btn btn-danger">
      Notifications <span class="badge bg-dark">7</span>
    </button>
  </div>) 

//progress bar 
A progress bar can be used to show how far a user is in a process,To create a default progress bar, add a .progress class to a container element and add the progress-bar class to its child element. Use the CSS width property to set the width of the progress bar
(<div class="container mt-3">
  <div class="progress">
    <div class="progress-bar" style="width:70%"></div>
  </div>
</div>) we can create a progress bar height in the progress cls ,The height of the progress bar is 1rem (16px) by default ,we can Use the CSS height property to change the height
(<div class="progress" style="height:20px">
  <div class="progress-bar bg-info" style="width:50%;">50%</div>//we can also use the label(50%) to be visible 
</div>)by default it has the bg-primary we can change the color of the progress bar inside the progress bar class
progress bar striped we can also add the progress-bar-striped cls to creaTE  a striped progress bar (<div class="progress">
  <div class="progress-bar progress-bar-striped bg-success" style="width:40%"></div>
</div>) //progress-bar-animated is used to animate 
we can also create a progress bar with 3 names in single line by creating a parent progress div and 3 child div to see 


//spinners
To create a spinner/loader, use the .spinner-border class inside the container div tag we can use different color also like txt-primary etc.(<div class="spinner-border text-primary"></div>)
//spinner grow is also a cls which is used to grow the spin (<div class="spinner-grow text-primary"></div>) we can reduce the spinner size by spinner-border-sm or spinner-grow-sm
these spinners can also used in a button with or without text and while loading we can also disable the button to click (<button class="btn btn-primary" disabled>
  <span class="spinner-border spinner-border-sm"></span>// sm will show a small button 
  Loading..
</button>)
(<button class="btn btn-primary" disabled>
  <span class="spinner-grow spinner-grow-sm"></span>
  Loading..
</button>)this will disable the link to touch 

//pagination
is used to say the number of states ,add the .pagination class to an <ul> element. Then add the .page-item to each <li> element and a .page-link class to each link inside <li>
  <ul class="pagination">
    <li class="page-item"><a class="page-link" href="#">Previous</a></li>
    <li class="page-item"><a class="page-link" href="#">1</a></li>
    </ul>

//list-group
this is like the table ,we can link the items in the list-group ,To create a list group with linked items, use <div> instead of <ul> and <a> instead of <li>. Optionally, add the .list-group-item-action class if you want a grey background color on hover
  <div class="list-group">
    <a href="#" class="list-group-item list-group-item-action">First item</a>
    <a href="#" class="list-group-item list-group-item-action">Second item</a>
    <a href="#" class="list-group-item list-group-item-action">Third item</a>
  </div> we can also disable the items in this group  by replaving the action with disable
  .list-group-flush class to remove some borders and rounded corners ,.list-group-numbered class to create list items with numbers in front of them.
  //we can also create horizontal groups by using .list-group-horizontal class to .list-group we can also add the colors list-group-item-success by adding like this and we can also add link items with contextual 
  classes also (<div class="list-group">
    <a href="#" class="list-group-item list-group-item-action">Action item</a>
    <a href="#" class="list-group-item list-group-item-action list-group-item-success">Success item</a></div>)
  
//card 
basic card can be created by 2 div one is parent with card cls and a child with card-body cls .we can also add the card-header ,card-content,and card-footer class we can also create the color to the cards
add the (<div class="card bg-info text-white">
  <div class="card-body">Info card</div>
</div>)we can also add the card-title,card-text,card-link inside the card-body tag 
//card with image 
<div class="card" style="width:500px">//this says the card width 
  <img class="card-img-top" src="../bootstrap4/img_avatar1.png" alt="Card image" style="width:100%">//this with says the image width and card-image top will display the image in top 
  <div class="card-body">
    <h4 class="card-title">John Doe</h4>
    <p class="card-text">Some example text some example text. John Doe is an architect and engineer</p>
    <a href="#" class="btn btn-primary">See Profile</a>
  </div>
</div>

//dropdown menu is a toggleable menu that allows the user to choose one value from a predefined list
.dropdown class is used to indicate a dropdown menu and dropdown-menu class to actually build the dropdown menu and To open the dropdown menu, use a button or a link with a class of .dropdown-toggle and data-toggle="dropdown"
<div class="dropdown">
  <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">//this will say if we click the drop down button then it will display bs-toggle 
    Dropdown button
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Link 1</a></li>
    <li><a class="dropdown-item" href="#">Link 2</a></li>
    <li><a class="dropdown-item" href="#">Link 3</a></li>
  </ul>
</div>
//if we havent used the drppdown-toggle class then we can see the icon 
//we can also creATE divider in the dropdown by adding dropdown-divider inside hr tag 
we can add droupdown-header 
// we can also add the active ,disabled and normal items in the drop-down using <li><a class="dropdown-item" href="#">Normal</a></li>
<li><a class="dropdown-item active" href="#">Active</a></li>
<li><a class="dropdown-item disabled" href="#">Disabled</a></li>
we can add the dropdown to be like in which side we want whether left or right dropstart will show left and text-end show the button position on right 
//vertical Button Group with dropdown can be creayed by adding btn-group-vertical to the parent div tag of the btn-group 

//colapsing is Clicking on the button to toggle between showing and hiding content.
<button type="button" class="btn btn-primary" data-bs-toggle="collapse" data-bs-target="#demos">Simple collapsible</button>
  <div id="demos" class="collapse" >//we have used the id name and class name to see the effect 
    Lorem ipsum dolor sit amet, consectetur adipisicing elit,
  </div>  we can also create a number of collapsible boxes 

  //navs 
  we can use the nav cls inside the <ul> tag and nav-item inside the <li> class and nav-link inside the <a> tag to create a basic nav if we want to disable then we can use nav-link disabled
 we can also create the nav to center and right by adding  nav justify-content-center and   nav justify-content-end to the ul tag 
 we can also create the vertical nav by uaing nav flex-column inside the ul tag (<ul class="nav flex-column">
  <li class="nav-item">
    <a class="nav-link" href="#">Link</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" href="#">Link</a>
  </li>)
  //navigation tabs 